backend_clustering_mode = 'streaming_replication'
listen_addresses = '*'
port = '5432'
unix_socket_directories = '/opt/bitnami/pgpool/tmp'
pcp_socket_dir = '/opt/bitnami/pgpool/tmp'


# Enabling Read/Write Splitting
# This is necessary for read/write splitting to be applied
enable_pool_hba = 'on'
pool_passwd = '/etc/pgpool-II/pool_passwd'
authentication_timeout = '30'
allow_clear_text_frontend_auth = 'off'
ssl = 'on'
ssl_key = '/certs-volume/postgres.key'
ssl_cert = '/certs-volume/postgres.crt'
ssl_ca_file = '/certs-volume/ca.crt'

# In pgpool.conf, enable connection draining:
connection_life_time = 300    # Set a reasonable time for idle connections to close.
client_idle_limit = 60        # Close idle client connections after 60 seconds.


max_pool = '15'
log_connections = 'off'
log_hostname = 'off'
log_per_node_statement = 'off'
log_min_messages = debug5
log_level = debug

# If you're using streaming replication, set this to true
load_balance_mode = on  # Enables load balancing across standbys
# Enable SQL-based read/write splitting:
# In pgpool, SELECTs are sent to standby by default, and other queries (INSERT, UPDATE, DELETE) go to the primary.
# Set the following flag to ensure this happens.
sql_mode = 'true'
disable_load_balance_on_write = 'transaction'
statement_level_load_balance = 'off'
sr_check_period = '30'
sr_check_user = 'postgres'
sr_check_password = 'AES0nFhDE+Eo+bGHWIQOjpGMmVNq7oyK2uKxydiAoSMte8='
sr_check_database = 'postgres'
health_check_period = '10'
health_check_timeout = '20'
health_check_user = 'postgres'
health_check_password = 'AES0nFhDE+Eo+bGHWIQOjpGMmVNq7oyK2uKxydiAoSMte8='
health_check_max_retries = '5'
health_check_retry_delay = '5'
connect_timeout = '10000'
failover_command = 'echo ">>> Failover - that will initialize new primary node search!"'
failover_command = '/scripts/failover_and_resync.sh %d %H'

failover_on_backend_error = 'off'
failover_on_backend_shutdown = 'on'
search_primary_node_timeout = '0'
backend_hostname0 = 'postgres_primary'
backend_port0 = 5432
backend_weight0 = 1
backend_data_directory0 = '/opt/bitnami/pgpool/data'
backend_flag0 = 'ALLOW_TO_FAILOVER'
backend_hostname1 = 'postgres_replica'
backend_port1 = 5432
backend_weight1 = 1
backend_data_directory1 = '/opt/bitnami/pgpool/data'
backend_flag1 = 'ALLOW_TO_FAILOVER'
pid_file_name = '/opt/bitnami/pgpool/tmp/pgpool.pid'
logdir = '/opt/bitnami/pgpool/logs'
