global
    log stdout format raw local0
    maxconn 4096
    user haproxy
    group haproxy

defaults
    log global
    mode tcp
    option tcplog
    timeout connect 30s
    timeout client 1m
    timeout server 1m

############
# PostgreSQL
############
# Clients connect to postgres.ritualworks.com:5433
# Certificate: /certs-volume/postgres.ritualworks.com.pem
frontend pgsql_frontend
    bind *:5433 ssl crt /certs-volume/postgres.ritualworks.com.pem
    default_backend pgsql_backend

backend pgsql_backend
    mode tcp
    option pgsql-check user haproxy_check
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
    server postgres_primary postgres_primary:5432 check
    server postgres_standby postgres_standby:5432 check backup

########
# Redis
########
# Clients connect to redis.ritualworks.com:6379
# If you want TLS termination at HAProxy, issue a cert and add `ssl crt /certs-volume/redis.ritualworks.com.pem`
# For simplicity here, no TLS at HAProxy for Redis. Just a straight pass-through.
frontend redis_frontend
    bind *:6379
    default_backend redis_backend

backend redis_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server redis_master redis-master:6379 check inter 5s fall 3 rise 2
    server redis_replica redis-replica:6380 check inter 5s backup fall 3 rise 2

#########
# MinIO
#########
# Clients connect to minio.ritualworks.com:9000
# Certificate: /certs-volume/minio.ritualworks.com.pem
frontend minio_frontend
    bind *:9000 ssl crt /certs-volume/minio.ritualworks.com.pem
    default_backend minio_backend

backend minio_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server minio1 minio1:9000 check inter 5s fall 3 rise 2
    server minio2 minio2:9000 check inter 5s fall 3 rise 2

##################
# Elasticsearch
##################
# Clients connect to elasticsearch.ritualworks.com:9200
# Certificate: /certs-volume/elasticsearch.ritualworks.com.pem
frontend elasticsearch_frontend
    bind *:9200 ssl crt /certs-volume/elasticsearch.ritualworks.com.pem
    default_backend elasticsearch_backend

backend elasticsearch_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server es_node_1 es-node-1:9200 check inter 5s fall 3 rise 2
    server es_node_2 es-node-2:9200 check inter 5s fall 3 rise 2

###########
# RabbitMQ
###########
# Clients connect to rabbitmq.ritualworks.com:5672
# Certificate: /certs-volume/rabbitmq.ritualworks.com.pem
frontend rabbitmq_frontend
    bind *:5672 ssl crt /certs-volume/rabbitmq.ritualworks.com.pem
    default_backend rabbitmq_backend

backend rabbitmq_backend
    mode tcp
    balance roundrobin
    option tcp-check
    server rabbitmq_node1 rabbitmq-node1:5672 check inter 5s fall 3 rise 2
    server rabbitmq_node2 rabbitmq-node2:5672 check inter 5s fall 3 rise 2

###########
# HAProxy Stats
###########
listen stats
    bind *:8404
    mode http
    log global
    maxconn 10
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /haproxy?stats
    stats auth admin:password
