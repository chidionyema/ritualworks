# nginx/conf.d/minio.conf

# Server block for minio.local.ritualworks.com (HTTP to HTTPS Redirect)
server {
    listen 80;
    server_name minio.local.ritualworks.com;
    return 301 https://$host$request_uri;
}

# Server block for minio.local.ritualworks.com (HTTPS)
server {
    listen 443 ssl http2;
    server_name minio.local.ritualworks.com;

    # SSL Configuration
    ssl_certificate /etc/nginx/ssl/minio.local.ritualworks.com.crt;
    ssl_certificate_key /etc/nginx/ssl/minio.local.ritualworks.com.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:...';  # Replace '...' with your cipher list
    ssl_session_timeout 1d;
    ssl_session_cache shared:MozSSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;

    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-Frame-Options DENY always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; object-src 'none';" always;

    # Main Location Block for MinIO
    location / {
        proxy_pass http://minio_cluster/;             # Proxy to the MinIO upstream
        proxy_http_version 1.1;
        proxy_set_header Host $host;                  # Preserve the original Host header
        proxy_set_header X-Real-IP $remote_addr;      # Pass the real client IP
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Preserve the forwarded IPs
        proxy_set_header X-Forwarded-Proto $scheme;   # Preserve the original protocol (http/https)

        # WebSocket Support (if applicable)
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # CORS Configuration (Adjust as needed)
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE, PATCH' always;
        add_header 'Access-Control-Allow-Headers' 'Origin, Content-Type, Accept, Authorization' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;

        # Handle Preflight Requests for CORS (if needed)
        if ($request_method = 'OPTIONS') {
            return 204;
        }

        # Rate Limiting and Connection Limiting
        limit_req zone=req_limit_per_ip burst=20 nodelay;
        limit_conn conn_limit_per_ip 1000;
    }
}
