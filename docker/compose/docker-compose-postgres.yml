services:
  etcd:
    image: quay.io/coreos/etcd:v3.5.5
    container_name: etcd
    command:
      - /usr/local/bin/etcd
      - --name
      - etcd0
      - --data-dir
      - /etcd-data
      - --listen-client-urls
      - http://0.0.0.0:2379
      - --advertise-client-urls
      - http://etcd:2379
    volumes:
      - etcd-data:/etcd-data
    networks:
      - internal_network

  postgres_primary:
    image: registry.opensource.zalan.do/acid/spilo-14:latest
    user: postgres
    container_name: postgres_primary
    build:
      context: ../../
      dockerfile: Dockerfile.postgres
    environment:
      - VAULT_ADDR=http://vault:8200
      - PATRONI_CONFIG=/etc/patroni/patroni-primary.yml

    ports:
      - "5432:5432"
    volumes:
      - postgres-primary-data:/var/lib/postgresql/data
      - postgres-primary-config:/home/postgres
      - certs-volume:/certs-volume
      - ../../patroni/patroni-primary.yml:/etc/patroni/patroni-primary.yml
    networks:
      - internal_network
    depends_on:
      - etcd
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgres_standby:
    image: registry.opensource.zalan.do/acid/spilo-14:latest
    user: postgres
    container_name: postgres_standby
    build:
      context: ../../
      dockerfile: Dockerfile.postgres
    environment:
      - VAULT_ADDR=http://vault:8200
      - PATRONI_CONFIG=/etc/patroni/patroni-standby.yml
 
    ports:
      - "5434:5432"
    volumes:
      - postgres-standby-data:/var/lib/postgresql/data
      - postgres-standby-config:/home/postgres
      - certs-volume:/certs-volume
      - ../../patroni/patroni-standby.yml:/etc/patroni/patroni-standby.yml
    networks:
      - internal_network
    depends_on:
      - etcd
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pg_dump_backup:
    image: postgres:16-alpine
    depends_on:
      - postgres_primary
    volumes:
      - backups:/backups
      - scripts:/scripts
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=postgres_primary
    networks:
      - internal_network
    entrypoint: ["/bin/bash", "/scripts/pg_dump_backup.sh"]

networks:
  internal_network:
    name: internal_network
    driver: bridge
    external: true

volumes:
  etcd-data:
  postgres-primary-data:
  postgres-primary-config:
  postgres-standby-data:
  postgres-standby-config:
  certs-volume:
  backups:
  scripts:
