version: '3.8'  # Ensure this is at the top

services:
  setup_dns:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.setup_dns
    network_mode: host
    command: bash /setup_local_dns.sh
    restart: "no"

  app:
    build:
      context: ../../
      dockerfile: docker/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USERNAME};Password=${POSTGRES_PASSWORD}
      - Elasticsearch__Uri=http://elasticsearch:9200
      - STRIPE_SECRET_KEY=${STRIPE_SECRET_KEY}
      - SocialMedia__Facebook__AppId=${FACEBOOK_APP_ID}
      - SocialMedia__Facebook__AppSecret=${FACEBOOK_APP_SECRET}
      - SocialMedia__Twitter__ApiKey=${TWITTER_API_KEY}
      - SocialMedia__Twitter__ApiSecret=${TWITTER_API_SECRET}
      - SomeOtherService__ApiKey=${SOME_OTHER_SERVICE_API_KEY}
      - RabbitMq__Host=rabbitmq
      - VAULT_ROOT_TOKEN=${VAULT_ROOT_TOKEN}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD}
      - VAULT_TOKEN=${VAULT_TOKEN}
    volumes:
      - uploads:/app/uploads
      - ../../vault/secrets:/vault/secrets
      - ../../app_logs:/logs
    networks:
      - internal_network
      - external_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - setup_dns
      - db_migrations

  db_migrations:
    build:
      context: ../../
      dockerfile: docker/Dockerfile.migrations
    environment:
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USERNAME};Password=${POSTGRES_PASSWORD};SSL Mode=Disable
      - VAULT_TOKEN=${VAULT_TOKEN}
      - VAULT_ROOT_TOKEN=${VAULT_ROOT_TOKEN}
      - POSTGRES_USERNAME=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - uploads:/app/uploads
      - postgres-creds:/vault/secrets
    command: ["database", "update"]
    networks:
      - internal_network

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ../../nginx/ssl:/etc/nginx/ssl
      - ../../nginx_logs:/var/log/nginx
    depends_on:
      - app
    networks:
      - external_network
      - internal_network

  verify_dns_and_access:
    image: busybox
    volumes:
      - ../../scripts/verify_dns_and_access.sh:/verify_dns_and_access.sh
    depends_on:
      - nginx
    command: sh /verify_dns_and_access.sh
    network_mode: host

networks:
  internal_network:
    name: internal_network
    external: true
    ipam:
      config:
        - subnet: 172.22.0.0/16
  external_network:
    name: external_network
    external: true
    ipam:
      config:
        - subnet: 172.23.0.0/16

volumes:
  uploads:
  postgres-creds:
